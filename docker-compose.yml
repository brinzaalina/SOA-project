services:
    eureka-container:
        image: eureka-image
        ports:
            - "8761:8761"
        networks:
            - app-network

    user-container:
        image: user-image
        ports:
            - "8080:8080"
        depends_on:
            - eureka-container
        networks:
            - app-network
        environment:
            server.port: 8080
            eureka.client.serviceUrl.defaultZone: http://eureka-container:8761/eureka/


    product-container:
        image: product-image
        ports:
            - "8081:8081"
        depends_on:
            - eureka-container
        networks:
            - app-network
        environment:
            server.port: 8081
            eureka.client.serviceUrl.defaultZone: http://eureka-container:8761/eureka/

    zuul-container:
        image: zuul-image
        ports:
            - "8765:8765"
        depends_on:
            - eureka-container
        networks:
            - app-network
        environment:
            server.port: 8765
            eureka.client.serviceUrl.defaultZone: http://eureka-container:8761/eureka/

    client:
        build: "E:\\Desktop Folders\\Facultate\\Master\\Anul 2\\SOA\\SOA-project\\SOA-project\\soa-client"
        environment:
            - REACT_APP_PORT=3000
        expose:
            - "3000"
        ports:
            - "3000:3000"
        networks:
            - app-network
        command: npm start -- --host 0.0.0.0


    zookeeper:
        image: wurstmeister/zookeeper
        expose:
            - "2181"

    kafka:
        image: wurstmeister/kafka
        ports:
            - "9092:9092"
        expose:
            - "9093"
        environment:
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://192.168.0.11:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            #KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
            #KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
            #KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
        depends_on:
            - zookeeper
        volumes:
            - ./:/etc/kafka
networks:
    app-network:
        driver: bridge
